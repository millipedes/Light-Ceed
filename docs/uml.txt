@startuml

class lexer {
   {field} + src : char *
   {field} + current_index : int
  {method} + lexer * init_lexer(char *)
  {method} + uds * lex_uds(lexer *)
  {method} + uds_member * lex_member(lexer *)
  {method} + lexer * lex_advance(lexer *)
  {method} + void debug_lexer(lexer *)
  {method} + void free_lexer(lexer *)
}

class uds {
   {field} + members : uds_member **
   {field} + methods : method_type *
   {field} + path : char *
   {field} + name : char *
   {field} + no_members : int
   {field} + no_methods : int
  {method} + uds * init_uds(char *, char *, method_type *, int)
  {method} + uds * add_member(uds_member *)
  {method} + void debug_uds(uds *)
  {method} + void free_uds(uds *)
}

class uds_member {
   {field} + type : data_type *
   {field} + name : char *
  {method} + uds_member * init_uds_member(data_type *, char *)
  {method} + void debug_uds_member(uds_member *)
  {method} + void free_uds_member(uds_member *)
}

class method_type {
   {field} + INIT
   {field} + DEBUG
   {field} + ADD
   {field} + DEEP_COPY
   {field} + FREE
   {field} + MT_NULL
  {method} + const char * method_type_to_string(method_type)
}

class data_type {
   {field} + literal : char *
   {field} + is_standard : int
   {field} + dereference_level : int
  {method} + data_type * init_data_type(char *, int)
  {method} + void debug_data_type(data_type *)
  {method} + void free_data_type(data_type *)
}

class symbol_table {
   {field} + all_uds : uds **
   {field} + no_uds : int
  {method} + init_symbol_table(void)
  {method} + add_symbol_table_member(symbol_table *, uds *)
  {method} + debug_symbol_table(symbol_table *)
  {method} + free_symbol_table(symbol_table *)
}

symbol_table "1" o--> "*" uds

uds "1" o--> "*" uds_member
uds     o-->     method_type

uds_member o--> data_type

lexer --> symbol_table
lexer --> uds
lexer --> uds_member
lexer --> method_type

@enduml
